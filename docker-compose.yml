# version: "3.7"
# services:
#   mongo:
#     restart: 'always'
#     ports:
#     - '27017:27017'
#     image: mongo
#     container_name: mongo-container
#     networks:
#       infranet:
#         aliases:
#         - 'mongodb-service'
#   mongo_exporter:
#     restart: 'always'
#     ports:
#     - '9001:9001'
#     image: gpuliyar/mongo-exporter
#     container_name: mongo-exporter-container
#     environment:
#     - 'MONGO_SERVICE=mongodb-service'
#     - 'MONGO_PORT=27017'
#     depends_on:
#     - mongo
#     networks:
#       infranet:
#         aliases:
#         - 'mongodb-exporter-service'
#   grafana:
#     restart: 'always'
#     ports:
#     - '3000:3000'
#     image: grafana/grafana:8.0.0
#     container_name: grafana-container
#     volumes:
#       - ./lib-data:/var/lib/grafana
#       - /root/mongodb-grafana/dist:/var/lib/grafana/plugins/mongodb

#     # environment:
#     #   - GF_INSTALL_PLUGINS=https://github.com/valiton/grafana-mongodb-atlas-datasource/releases/download/v3.0.1/valiton-mongodbatlas-datasource.zip;valiton-mongodbatlas-datasource 
#     #   - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=valiton-mongodbatlas-datasource
#   prometheus:
#     restart: 'always'
#     ports:
#     - '9090:9090'
#     image: prom/prometheus
#     container_name: prometheus-container
#     command:
#     - '--config.file=/prometheus/config/prometheus.yaml'
#     - '--storage.tsdb.path=/data'
#     volumes:
#     - ./config:/prometheus/config
#     - ./data:/data
#     depends_on:
#     - mongo_exporter
#     networks:
#       infranet:
#         aliases:
#         - 'prometheus-service'
# networks:
#   infranet:

version: '2.4'

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_usr}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_pwd}
    volumes:
      - /var/data/grafamo:/data/db

  middleware:
    build:
      context: .
      dockerfile: ProxyDockerfile
    restart: always

  grafana:
    env_file: configuration.env
    build:
      context: .
      dockerfile: GrafanaDockerfile
    restart: always
    ports:
      - 3000:3000